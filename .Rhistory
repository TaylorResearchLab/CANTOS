affinity_cluster_df[iter,2] <- iter
}
affinity_cluster_df<- affinity_cluster_df %>% separate_rows(Tumor_Names, sep = '@')
affinity_cluster_df$Cluster_ID<-as.character(affinity_cluster_df$Cluster_ID)
cluster_frequency_table <- as.data.frame(table(affinity_cluster_df$Cluster_ID))
colnames(cluster_frequency_table)<- c("Cluster_ID","Primary_Cluster_Frequency")
cluster_frequency_table$Cluster_ID<-as.character(cluster_frequency_table$Cluster_ID)
z_scores<- (cluster_frequency_table$Primary_Cluster_Frequency-mean(cluster_frequency_table$Primary_Cluster_Frequency))/sd(cluster_frequency_table$Primary_Cluster_Frequency)
cluster_frequency_table$z_scores<-z_scores
ind_min_zscore<- which(cluster_frequency_table$z_scores < 2.5)
max_cluster_member <- max(cluster_frequency_table$Primary_Cluster_Frequency[ind_min_zscore])
#median_cluster_frequency <- median(cluster_frequency_table$Primary_Cluster_Frequency)
#large_cluster_labels<- cluster_frequency_table$Cluster_ID[which(cluster_frequency_table$Primary_Cluster_Frequency>median_cluster_frequency)]
large_cluster_labels<- cluster_frequency_table$Cluster_ID[which(cluster_frequency_table$Primary_Cluster_Frequency>max_cluster_member)]
converge_list<-list()
while(length(large_cluster_labels)>0){
print(length(large_cluster_labels))
for(iter in 1:length(large_cluster_labels)){
Clusters_Names=large_cluster_labels[iter]
subset_embedding_df <- as.data.frame(affinity_cluster_df$Tumor_Names[affinity_cluster_df$Cluster_ID==Clusters_Names])
colnames(subset_embedding_df)<-"Tumor_Name"
rownames(subset_embedding_df)<-subset_embedding_df$Tumor_Name
subset_embedding_df<- subset_embedding_df %>% dplyr::left_join(disease_transform,by="Tumor_Name")
rownames(subset_embedding_df)<-subset_embedding_df$Tumor_Name
subset_embedding_df<-subset_embedding_df[,c(-1)]
result_run_aff<-run_affinity_clustering(Clusters_Names,subset_embedding_df)
flag_converge <- result_run_aff[[1]]
subset_affinity_df<-result_run_aff[[2]]
if(flag_converge=="No"){
for (iter_nested_affinity_cluser in 1: dim(subset_affinity_df)[1]){
ind_location <- which (affinity_cluster_df$Tumor_Names==subset_affinity_df$Tumor_Names[iter_nested_affinity_cluser])
affinity_cluster_df$Cluster_ID[ind_location]<-subset_affinity_df$SubCluster_ID[iter_nested_affinity_cluser]
}
}else if(flag_converge=="Yes"){
converge_list<-append(Clusters_Names,converge_list)
}
}
cluster_frequency_table <- as.data.frame(table(affinity_cluster_df$Cluster_ID))
colnames(cluster_frequency_table)<- c("Cluster_ID","Primary_Cluster_Frequency")
cluster_frequency_table$Cluster_ID<-as.character(cluster_frequency_table$Cluster_ID)
large_cluster_labels<- cluster_frequency_table$Cluster_ID[which(cluster_frequency_table$Primary_Cluster_Frequency>max_cluster_member)]
large_cluster_labels<-setdiff(large_cluster_labels, unlist(converge_list))
}
intermediate_dir
save(affinity_cluster_df,file = paste(intermediate_dir,"/affinity_cluster_df_ada2_5thed.RData",sep=""))
save.image(file = "script6a_5thed.RData")
View(affinity_cluster_df)
# Computes affinity cluster of V3 data. Nested clustering is performed on large cluster. Cluster size is determined to be large using Z scores on cluster membership.
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
results_dir <- file.path(analysis_dir,"results_5th")
source(paste(util_dir,"/run_affinity_clustering.R",sep=""))
intermediate_dir
results_dir
disease_transform_v3<- read.csv(paste(intermediate_dir,"/disease_transform_pca_v3_5thed.csv",sep="") )
colnames(disease_transform_v3)[1]<-"Tumor_Names"
rownames(disease_transform_v3)<-disease_transform_v3$Tumor_Name # Needed for AP Clust
# Set Seed
set.seed(13)
#affinity cluster
#######V3
dist_euclidean_v3<- dist(disease_transform_v3,method = "euclidean")
dist_euclidean_v3<-as.matrix(dist_euclidean_v3)
simmilarity_euclidean_v3<- 1/(1+dist_euclidean_v3)
af_clust_euclidean_v3 <- apcluster(simmilarity_euclidean_v3)#5:11 pm start 7:08 continuing 3:45 pm start
affinity_cluster_v3_df<-as.data.frame(matrix(nrow=1,ncol=2))
colnames(affinity_cluster_v3_df)<-c("Tumor_Names","Cluster_ID")
for (iter in 1: length(af_clust_euclidean_v3@clusters)){
affinity_cluster_v3_df[iter,1] <- paste(names(unlist(af_clust_euclidean_v3@clusters[iter])),collapse = "@")
affinity_cluster_v3_df[iter,2] <- iter
}
affinity_cluster_v3_df<- affinity_cluster_v3_df %>% separate_rows(Tumor_Names, sep = '@')
affinity_cluster_v3_df$Cluster_ID<-as.character(affinity_cluster_v3_df$Cluster_ID)
####v3
################ v3
# Find cluster membership frequencies
#affinity_cluster_df$Cluster_Total_Members <- NA
cluster_frequency_v3_table <- as.data.frame(table(affinity_cluster_v3_df$Cluster_ID))
colnames(cluster_frequency_v3_table)<- c("Cluster_ID","Primary_Cluster_Frequency")
cluster_frequency_v3_table$Cluster_ID<-as.character(cluster_frequency_v3_table$Cluster_ID)
z_scores_v3<- (cluster_frequency_v3_table$Primary_Cluster_Frequency-mean(cluster_frequency_v3_table$Primary_Cluster_Frequency))/sd(cluster_frequency_v3_table$Primary_Cluster_Frequency)
cluster_frequency_v3_table$z_scores<-z_scores_v3
ind_min_zscore<- which(cluster_frequency_v3_table$z_scores < 2.5)
max_cluster_member <- max(cluster_frequency_v3_table$Primary_Cluster_Frequency[ind_min_zscore])
large_cluster_labels_v3<- cluster_frequency_v3_table$Cluster_ID[which(cluster_frequency_v3_table$Primary_Cluster_Frequency>max_cluster_member)]
converge_list_v3<-list()
while(length(large_cluster_labels_v3)>0){
print(length(large_cluster_labels_v3))
for(iter in 1:length(large_cluster_labels_v3)){
Clusters_Names=large_cluster_labels_v3[iter]
subset_embedding_v3_df <- as.data.frame(affinity_cluster_v3_df$Tumor_Names[affinity_cluster_v3_df$Cluster_ID==Clusters_Names])
colnames(subset_embedding_v3_df)<-"Tumor_Names"
rownames(subset_embedding_v3_df)<-subset_embedding_v3_df$Tumor_Names
subset_embedding_v3_df<- subset_embedding_v3_df %>% dplyr::left_join(disease_transform_v3,by="Tumor_Names")
rownames(subset_embedding_v3_df)<-subset_embedding_v3_df$Tumor_Names
subset_embedding_v3_df<-subset_embedding_v3_df[,c(-1)]
result_run_v3_aff<-run_affinity_clustering(Clusters_Names,subset_embedding_v3_df[,c(-1)])
flag_converge_v3 <- result_run_v3_aff[[1]]
subset_affinity_v3_df<-result_run_v3_aff[[2]]
if(flag_converge_v3=="No"){
for (iter_nested_affinity_cluser_v3 in 1: dim(subset_affinity_v3_df)[1]){
ind_location_v3 <- which (affinity_cluster_v3_df$Tumor_Names==subset_affinity_v3_df$Tumor_Names[iter_nested_affinity_cluser_v3])
affinity_cluster_v3_df$Cluster_ID[ind_location_v3]<-subset_affinity_v3_df$SubCluster_ID[iter_nested_affinity_cluser_v3]
}
}else if(flag_converge_v3=="Yes"){
converge_list_v3<-append(Clusters_Names,converge_list_v3)
}
}
cluster_frequency_v3_table <- as.data.frame(table(affinity_cluster_v3_df$Cluster_ID))
colnames(cluster_frequency_v3_table)<- c("Cluster_ID","Primary_Cluster_Frequency")
cluster_frequency_v3_table$Cluster_ID<-as.character(cluster_frequency_v3_table$Cluster_ID)
large_cluster_labels_v3<- cluster_frequency_v3_table$Cluster_ID[which(cluster_frequency_v3_table$Primary_Cluster_Frequency>max_cluster_member)]
large_cluster_labels_v3<-setdiff(large_cluster_labels_v3, unlist(converge_list_v3))
}
save(affinity_cluster_v3_df,file = paste(intermediate_dir,"/affinity_cluster_v3_df_5thed.RData",sep=""))
save.image(file = "script6B_affinitycluster_v3_5thed.RData")
# Annotate Affinity cluster results of ADA2
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
load(paste(intermediate_dir,"/affinity_cluster_df_ada2.RData",sep=""))
load(paste(intermediate_dir,"/affinity_cluster_df_ada2_5thed.RData",sep=""))
NCIT_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/NCIT_Neoplasm_Core_terms_text-embedding-ada-002_embeddings.csv",sep=""))
NCIT_embedding_df<-NCIT_embedding_df[c(-1),] # Remove the header (column name) embedding
WHO_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/WHO_Only_terms_text-embedding-ada-002_embeddings.csv",sep=""))
WHO_embedding_df2 <- read.csv(paste(data_dir,"/WHO_Aggregate_ADA2.csv",sep="")) #
WHO_Terms_All <-readxl::read_xlsx(paste(data_dir,"/WHO_Tumors/result/WHO_Tumor_all_edition.xlsx",sep=""))
WHO_Terms_5th<-WHO_Terms_All%>%filter(edition_5th=="Yes")
View(WHO_embedding_df2)
WHO_embedding_df2<-WHO_embedding_df2 %>% dplyr::filter(Disease %in% WHO_Terms_5th$Tumor_Names)
WHO_embedding_df<-read.csv(paste(data_dir,"/WHO_Terms_ALL_V3.csv",sep=""))
WHO_embedding_dfv3<-read.csv(paste(data_dir,"/WHO_Terms_ALL_V3.csv",sep=""))
WHO_embedding_dfv3<-WHO_embedding_dfv3 %>% dplyr::filter(Disease %in% WHO_Terms_5th$Tumor_Names)
WHO_embedding_dfv3<-WHO_embedding_dfv3 %>% dplyr::filter(Tumor_Names %in% WHO_Terms_5th$Tumor_Names)
View(WHO_embedding_df)
WHO_embedding_df<-WHO_embedding_df[c(-1)]
WHO_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/WHO_Only_terms_text-embedding-ada-002_embeddings.csv",sep=""))
WHO_embedding_df<-WHO_embedding_df[c(-1),]
length(which(WHO_embedding_df$Disease %in% WHO_embedding_df2$Disease))
# Annotate Affinity cluster results of ADA2
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
load(paste(intermediate_dir,"/affinity_cluster_df_ada2_5thed.RData",sep=""))
NCIT_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/NCIT_Neoplasm_Core_terms_text-embedding-ada-002_embeddings.csv",sep=""))
NCIT_embedding_df<-NCIT_embedding_df[c(-1),] # Remove the header (column name) embedding
WHO_Terms_All <-readxl::read_xlsx(paste(data_dir,"/WHO_Tumors/result/WHO_Tumor_all_edition.xlsx",sep=""))
WHO_Terms_5th<-WHO_Terms_All%>%filter(edition_5th=="Yes")
WHO_embedding_df <- read.csv(paste(data_dir,"/WHO_Aggregate_ADA2.csv",sep="")) #
WHO_embedding_df<-WHO_embedding_df %>% dplyr::filter(Disease %in% WHO_Terms_5th$Tumor_Names)
rownames(NCIT_embedding_df)<-NULL
rownames(WHO_embedding_df)<-NULL
cl <- makeCluster(6, outfile="")
registerDoParallel(cl)
CalculateEuclideanDistance <- function(vect1, vect2) sqrt(sum((vect1 - vect2)^2))
load(paste(intermediate_dir,"/combined_embedding_ada2_df.RData",sep=""))
load(paste(intermediate_dir,"/combined_embedding_ada2_df.RData",sep=""))
load('/Users/lahiria/Desktop/MTP_Paper/CT-Embedding-Paper/analysis/intermediate/combined_embedding_ada2_df.RData')
load("/Users/lahiria/Desktop/MTP_Paper/temp/CT-Large-File-June21/script4a.RData")
print(sum(ff[2,1:141]))
load("/Users/lahiria/Desktop/MTP_Paper/temp/CT-Large-File-June21/script4a_5thed.RData")
save(combined_embedding_df,file = paste(intermediate_dir,"/combined_embedding_ada2_df_5thed.RData",sep=""))
# Annotate Affinity cluster results of ADA2
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
load(paste(intermediate_dir,"/affinity_cluster_df_ada2_5thed.RData",sep=""))
load(paste(intermediate_dir,"/combined_embedding_ada2_5thed.RData",sep=""))
load(paste(intermediate_dir,"/combined_embedding_ada2_df_5thed.RData",sep=""))
# Annotate Affinity cluster results of ADA2
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
load(paste(intermediate_dir,"/affinity_cluster_df_ada2_5thed.RData",sep=""))
load(paste(intermediate_dir,"/combined_embedding_ada2_df_5thed.RData",sep=""))
NCIT_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/NCIT_Neoplasm_Core_terms_text-embedding-ada-002_embeddings.csv",sep=""))
NCIT_embedding_df<-NCIT_embedding_df[c(-1),] # Remove the header (column name) embedding
WHO_Terms_All <-readxl::read_xlsx(paste(data_dir,"/WHO_Tumors/result/WHO_Tumor_all_edition.xlsx",sep=""))
WHO_Terms_5th<-WHO_Terms_All%>%filter(edition_5th=="Yes")
WHO_embedding_df <- read.csv(paste(data_dir,"/WHO_Aggregate_ADA2.csv",sep="")) #
WHO_embedding_df<-WHO_embedding_df %>% dplyr::filter(Disease %in% WHO_Terms_5th$Tumor_Names)
rownames(NCIT_embedding_df)<-NULL
rownames(WHO_embedding_df)<-NULL
cl <- makeCluster(6, outfile="")
registerDoParallel(cl)
CalculateEuclideanDistance <- function(vect1, vect2) sqrt(sum((vect1 - vect2)^2))
View(combined_embedding_df)
ncol(WHO_embedding_df)
length(2:ncol(WHO_embedding_df))
View(NCIT_embedding_df)
View(WHO_embedding_df)
WHO_embedding_df<-WHO_embedding_df[,c(-1)]
length(2:ncol(WHO_embedding_df))
embedding_pairwise<- as.matrix(rbind(combined_embedding_df[1,],WHO_embedding_df[,2:ncol(WHO_embedding_df)]))
View(WHO_embedding_df)
colnames(WHO_embedding_df)<-colnames(NCIT_embedding_df)
embedding_pairwise<- as.matrix(rbind(combined_embedding_df[i,],WHO_embedding_df[,2:ncol(WHO_embedding_df)]))
embedding_pairwise<- as.matrix(rbind(combined_embedding_df[1,],WHO_embedding_df[,2:ncol(WHO_embedding_df)]))
euclidean_dist <- as.matrix(dist(embedding_pairwise,method = "euclidean"))
d<-as.double(euclidean_dist[1,c(-1)])
d
# Annotate Affinity cluster results of ADA2
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
load(paste(intermediate_dir,"/affinity_cluster_df_ada2_5thed.RData",sep=""))
load(paste(intermediate_dir,"/combined_embedding_ada2_df_5thed.RData",sep=""))
NCIT_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/NCIT_Neoplasm_Core_terms_text-embedding-ada-002_embeddings.csv",sep=""))
NCIT_embedding_df<-NCIT_embedding_df[c(-1),] # Remove the header (column name) embedding
WHO_Terms_All <-readxl::read_xlsx(paste(data_dir,"/WHO_Tumors/result/WHO_Tumor_all_edition.xlsx",sep=""))
WHO_Terms_5th<-WHO_Terms_All%>%filter(edition_5th=="Yes")
WHO_embedding_df <- read.csv(paste(data_dir,"/WHO_Aggregate_ADA2.csv",sep="")) #
WHO_embedding_df<-WHO_embedding_df %>% dplyr::filter(Disease %in% WHO_Terms_5th$Tumor_Names)
WHO_embedding_df<-WHO_embedding_df[,c(-1)]
rownames(NCIT_embedding_df)<-NULL
rownames(WHO_embedding_df)<-NULL
colnames(WHO_embedding_df)<-colnames(NCIT_embedding_df)
cl <- makeCluster(6, outfile="")
registerDoParallel(cl)
CalculateEuclideanDistance <- function(vect1, vect2) sqrt(sum((vect1 - vect2)^2))
outer_who_final<-foreach(i = 1:10, .combine = rbind) %dopar% { #12:10pm -
print(i)
#s <- apply(WHO_embedding_df[,2:1537],1,CalculateEuclideanDistance,vect2=combined_embedding_df[i,])
embedding_pairwise<- as.matrix(rbind(combined_embedding_df[i,],WHO_embedding_df[,2:ncol(WHO_embedding_df)]))
euclidean_dist <- as.matrix(dist(embedding_pairwise,method = "euclidean"))
d<-as.double(euclidean_dist[1,c(-1)])
}
colnames(outer_who_final)<-(WHO_embedding_df$Disease)
rownames(outer_who_final)<-rownames(combined_embedding_df)[1:10]
View(outer_who_final)
stopCluster(cl)
rm(cl)
# Annotate Affinity cluster results of ADA2
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
load(paste(intermediate_dir,"/affinity_cluster_df_ada2.RData",sep=""))
load(paste(intermediate_dir,"/combined_embedding_ada2_df.RData",sep=""))
load("/Users/lahiria/Desktop/MTP_Paper/temp/CT-Large-File-June21/combined_embedding_ada2_df.RData")
NCIT_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/NCIT_Neoplasm_Core_terms_text-embedding-ada-002_embeddings.csv",sep=""))
NCIT_embedding_df<-NCIT_embedding_df[c(-1),] # Remove the header (column name) embedding
WHO_Terms_All <-readxl::read_xlsx(paste(data_dir,"/WHO_Tumors/result/WHO_Tumor_all_edition.xlsx",sep=""))
WHO_Terms_5th<-WHO_Terms_All%>%filter(edition_5th=="Yes")
WHO_embedding_df <- read.csv(paste(data_dir,"/WHO_Aggregate_ADA2.csv",sep="")) #
WHO_embedding_df<-WHO_embedding_df %>% dplyr::filter(Disease %in% WHO_Terms_5th$Tumor_Names)
WHO_embedding_df<-WHO_embedding_df[,c(-1)]
rownames(NCIT_embedding_df)<-NULL
rownames(WHO_embedding_df)<-NULL
colnames(WHO_embedding_df)<-colnames(NCIT_embedding_df)
rownames(NCIT_embedding_df)<-NULL
rownames(WHO_embedding_df)<-NULL
cl <- makeCluster(6, outfile="")
registerDoParallel(cl)
CalculateEuclideanDistance <- function(vect1, vect2) sqrt(sum((vect1 - vect2)^2))
outer_who_final<-foreach(i = 1:10, .combine = rbind) %dopar% { #12:10pm -
print(i)
#s <- apply(WHO_embedding_df[,2:1537],1,CalculateEuclideanDistance,vect2=combined_embedding_df[i,])
embedding_pairwise<- as.matrix(rbind(combined_embedding_df[i,],WHO_embedding_df[,2:ncol(WHO_embedding_df)]))
euclidean_dist <- as.matrix(dist(embedding_pairwise,method = "euclidean"))
d<-as.double(euclidean_dist[1,c(-1)])
}
colnames(outer_who_final)<-(WHO_embedding_df$Disease)
rownames(outer_who_final)<-rownames(combined_embedding_df)[1:10]
View(outer_who_final)
# Annotate Affinity cluster results of ADA2
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
load("/Users/lahiria/Desktop/MTP_Paper/temp/CT-Large-File-June21/combined_embedding_ada2_df.RData")
load(paste(intermediate_dir,"/affinity_cluster_df_ada2.RData",sep=""))
NCIT_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/NCIT_Neoplasm_Core_terms_text-embedding-ada-002_embeddings.csv",sep=""))
NCIT_embedding_df<-NCIT_embedding_df[c(-1),] # Remove the header (column name) embedding
WHO_Terms_All <-readxl::read_xlsx(paste(data_dir,"/WHO_Tumors/result/WHO_Tumor_all_edition.xlsx",sep=""))
WHO_Terms_5th<-WHO_Terms_All%>%filter(edition_5th=="Yes")
WHO_embedding_df <- read.csv(paste(data_dir,"/WHO_Aggregate_ADA2.csv",sep="")) #
WHO_embedding_df<-WHO_embedding_df %>% dplyr::filter(Disease %in% WHO_Terms_5th$Tumor_Names)
WHO_embedding_df<-WHO_embedding_df[,c(-1)]
rownames(NCIT_embedding_df)<-NULL
rownames(WHO_embedding_df)<-NULL
colnames(WHO_embedding_df)<-colnames(NCIT_embedding_df)
rownames(NCIT_embedding_df)<-NULL
rownames(WHO_embedding_df)<-NULL
#combined_embedding_df$Tumor_Names <- rownames(combined_embedding_df)
#CT_embedding<- combined_embedding_df %>% filter(!(Tumor_Names %in% unique(c(tolower(NCIT_embedding_df$Disease),tolower(WHO_embedding_df$Disease)) ) ))
#
cl <- makeCluster(6, outfile="")
registerDoParallel(cl)
CalculateEuclideanDistance <- function(vect1, vect2) sqrt(sum((vect1 - vect2)^2))
outer_who_final<-foreach(i = 1:1000, .combine = rbind) %dopar% { #12:10pm -
print(i)
#s <- apply(WHO_embedding_df[,2:1537],1,CalculateEuclideanDistance,vect2=combined_embedding_df[i,])
embedding_pairwise<- as.matrix(rbind(combined_embedding_df[i,],WHO_embedding_df[,2:ncol(WHO_embedding_df)]))
euclidean_dist <- as.matrix(dist(embedding_pairwise,method = "euclidean"))
d<-as.double(euclidean_dist[1,c(-1)])
}
tmp<-outer_who_final
dim(outer_who_final)
rm(outer_who_final)
dim(tmp)
outer_who_final<-foreach(i = 1001:5000, .combine = rbind) %dopar% { #12:10pm -
print(i)
#s <- apply(WHO_embedding_df[,2:1537],1,CalculateEuclideanDistance,vect2=combined_embedding_df[i,])
embedding_pairwise<- as.matrix(rbind(combined_embedding_df[i,],WHO_embedding_df[,2:ncol(WHO_embedding_df)]))
euclidean_dist <- as.matrix(dist(embedding_pairwise,method = "euclidean"))
d<-as.double(euclidean_dist[1,c(-1)])
}
dim(outer_who_final)
dim(tmp)
tmp<-rbind(tmp,outer_who_final)
dim(tmp)
save.image("script-7A-while-jul31.RData")
outer_who_final<-foreach(i = 5001:15000, .combine = rbind) %dopar% { #12:10pm -
print(i)
#s <- apply(WHO_embedding_df[,2:1537],1,CalculateEuclideanDistance,vect2=combined_embedding_df[i,])
embedding_pairwise<- as.matrix(rbind(combined_embedding_df[i,],WHO_embedding_df[,2:ncol(WHO_embedding_df)]))
euclidean_dist <- as.matrix(dist(embedding_pairwise,method = "euclidean"))
d<-as.double(euclidean_dist[1,c(-1)])
}
load("/Users/lahiria/Desktop/MTP_Paper/temp/CT-Large-File-June21/script4b_5thed.RData")
intermediate_dir
save(combined_embeddings_df,file = paste(intermediate_dir,"/combined_embedding_v3_df_5thed.RData",sep=""))
save(combined_embeddings_df,file = paste(intermediate_dir,"/combined_embedding_v3_df_5thed.RData",sep=""))
load("~/Desktop/MTP_Paper/temp/CT-Large-File-June21/script4b.RData")
load("~/Desktop/MTP_Paper/temp/CT-Large-File-June21/script4a.RData")
load("~/Desktop/MTP_Paper/temp/CT-Large-File-June21/script4a.RData")
View(disease_transform)
load("~/Desktop/MTP_Paper/temp/CT-Large-File-June21/script4b.RData")
View(disease_transform_v3)
load("~/Desktop/MTP_Paper/temp/CT-Large-File-June21/script4a_5thed.RData")
View(disease_transform)
load("~/Desktop/MTP_Paper/temp/CT-Large-File-June21/script4b_5thed.RData")
View(disease_transform_v3)
library(readr)
cluster_lv <- read_csv("analysis/results_5th/cluster_lv.csv")
View(cluster_lv)
library(readr)
cluster_jw <- read_csv("analysis/results/cluster_jw.csv")
View(cluster_jw)
View(cluster_jw)
load("~/Desktop/MTP_Paper/temp/CT-Large-File-June21/script3.RData")
View(affinity_cluster_cosine_df)
View(cluster_jw)
View(nested_affinity_cluster_cosine)
View(ct_disease_df)
View(affinity_cluster_cosine_df)
