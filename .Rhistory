affinity_cluster_df3[iter,1] <- paste(names(unlist( app3@clusters[iter])),collapse = "@")
affinity_cluster_df3[iter,2] <- iter
}
affinity_cluster_df3<- affinity_cluster_df3 %>% separate_rows(data, sep = '@')
affinity_cluster_df3$Cluster_ID<-as.character(affinity_cluster_df3$Cluster_ID)
x3<-as.data.frame(x3)
x3$data<-rownames(x3)
affinity_cluster_df3<-affinity_cluster_df3%>% left_join(x3,by="data")
View(affinity_cluster_df3)
aff3<-affinity_cluster_df3%>%dplyr::filter(Cluster_ID==1)
x4<-aff3[,3:4]
app4<-apcluster(negDistMat(r=2), x4)
affinity_cluster_df4<-as.data.frame(matrix(nrow=1,ncol=2))
colnames(affinity_cluster_df4)<-c("data","Cluster_ID")
for (iter in 1: length( app4@clusters)){
affinity_cluster_df4[iter,1] <- paste(names(unlist( app4@clusters[iter])),collapse = "@")
affinity_cluster_df4[iter,2] <- iter
}
affinity_cluster_df4<- affinity_cluster_df4 %>% separate_rows(data, sep = '@')
affinity_cluster_df4$Cluster_ID<-as.character(affinity_cluster_df4$Cluster_ID)
x4<-as.data.frame(x4)
x4$data<-rownames(x4)
affinity_cluster_df4<-affinity_cluster_df4%>% left_join(x4,by="data")
View(affinity_cluster_df4)
ggplot(affinity_cluster_df4, aes(x=V1, y=V2,color=Cluster_ID)) +
geom_point()
suppressPackageStartupMessages({
library(dplyr)
library(tidyverse)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
source(paste(util_dir,"/split_drugs.R",sep = ""))
# Load CT data
load(paste(input_dir,"/clinical_data.RData",sep=""))
load(paste(input_dir,"/eligibility_data.RData",sep=""))
load(paste(input_dir,"/conditions_data.RData",sep=""))
load(paste(input_dir,"/browse_conditions_data.RData",sep=""))
View(clinical_data)
unique(clinical_data$intervention_type)
clinical_data <- clinical_data %>% dplyr::left_join(eligibility_data,by="nct_id")
clinical_data<-clinical_data %>% dplyr::select(nct_id,intervention_type,name)
clinical_data<-clinical_data %>% dplyr::filter(intervention_type %in% c("Drug","Biological","Combination Product","Genetic" ))
colnames(clinical_data)[3]<-"Intervention_CT"
clinical_data<-split_drugs(clinical_data)
clinical_data<-distinct(clinical_data)
clinical_data <- clinical_data %>% dplyr::select(nct_id,Intervention_CT)
conditions_data <- conditions_data %>% dplyr::select(nct_id,downcase_name)
browse_conditions_data<-browse_conditions_data %>% dplyr::select(nct_id,downcase_mesh_term)
clinical_data <- clinical_data %>% dplyr::left_join(conditions_data,by="nct_id") # contains CT drugs and disease info with NCT_IDs
colnames(clinical_data)[3]<-"diseases"
# CT-Disease-File
ct_disease_df <- as.data.frame(clinical_data$diseases)
colnames(ct_disease_df)<- "diseases"
ct_disease_df<-distinct(ct_disease_df)
View(clinical_data)
View(eligibility_data)
View(ct_disease_df)
View(conditions_data)
View(ct_disease_df)
ct_disease_df<-unique(ct_disease_df)
load("~/Desktop/MTP_Paper/temp/CT-Large-File/script3.RData")
View(nested_affinity_cluster_cosine)
source(paste(util_dir,"/edit_distance_nested_cluster.R",sep=""))
cluster_frequency_table_cosine
nested_affinity_cluster_lv2<- edit_distance_nested_cluster(affinity_cluster_lv_df,simmilarity_matrix_lv)
nested_affinity_cluster_jw2<- edit_distance_nested_cluster(affinity_cluster_jw_df,simmilarity_matrix_jw)
nested_affinity_cluster_cosine2<- edit_distance_nested_cluster(affinity_cluster_cosine_df,simmilarity_matrix_cosine)
nested_affinity_cluster_lv2<-compute_silhouette(cluster_df = nested_affinity_cluster_lv2,dist_mat = dissimilarity_matrix_lv)
View(compute_silhouette)
colnames(nested_affinity_cluster_cosine)
nested_affinity_cluster_cosine2<-compute_silhouette(cluster_df = nested_affinity_cluster_cosine2,dist_mat = dissimilarity_matrix_cosine)
cluster_df<-nested_affinity_cluster_cosine
dist_mat<-dissimilarity_matrix_cosine
cluster_df<-cluster_df[order(cluster_df$Cluster_ID),]
dist_mat<-as.data.frame(dist_mat)
dist_mat$Tumor_Name <- rownames(dist_mat)
cluster_df$silhouette_score<-NA
for (iter in 1:10){
# values<-foreach(iter=1:dim(cluster_df)[1],.combine=rbind) %dopar% {
print(iter)
disease_name <- cluster_df$Tumor_Names[iter]
cluster_label <- cluster_df$Cluster_ID[iter]
cluster_member_names <- cluster_df$Tumor_Names[which(cluster_df$Cluster_ID==cluster_label)]
subset_dist_mat <- dist_mat %>% dplyr::filter(Tumor_Name %in% cluster_member_names) %>% dplyr::select(any_of(cluster_member_names))
if(dim(subset_dist_mat)[1] > 1){
ind_disease_name<- which(rownames(subset_dist_mat)==disease_name)
a= subset_dist_mat[ind_disease_name,]
delete_self_ind <- which(colnames(a)==disease_name)
a=a[c(-delete_self_ind)]
a=mean(as.matrix(a))
subset_other_clust <- cluster_df %>% dplyr::filter(Cluster_ID != cluster_label)
subset_other_clust<-subset_other_clust[order(subset_other_clust$Cluster_ID),]
other_clust_dist <- dist_mat %>% dplyr::filter(Tumor_Name %in% disease_name)
other_clust_dist<- other_clust_dist[,c(-dim(other_clust_dist)[2])]
other_clust_dist<-t(other_clust_dist)
colnames(other_clust_dist)<- "dx"
other_clust_dist<-as.data.frame(other_clust_dist)
other_clust_dist$dx<-as.double(other_clust_dist$dx)
other_clust_dist$Tumor_Names <- rownames(other_clust_dist)
subset_other_clust <- subset_other_clust %>% dplyr::left_join(other_clust_dist,by="Tumor_Names")
d_clust=aggregate( dx ~ Cluster_ID,subset_other_clust, mean )
b= min(d_clust$dx)
silo= (b-a)/max(a,b)
}else if(dim(subset_dist_mat)[1] == 1){
silo=0
}
cluster_df$silhouette_score[iter] <- silo
}
View(cluster_df)
cluster_df2<-nested_affinity_cluster_cosine
View(cluster_df2)
cluster_df2<-cluster_df2%>%dplyr::select(Tumor_Names,SubsetCluster_IDs)
colnames(cluster_df2)[2]<-"Cluster_ID"
cluster_df2<-cluster_df2[order(cluster_df2$Cluster_ID),]
cluster_df2$silhouette_score<-NA
for (iter in 1:10){
# values<-foreach(iter=1:dim(cluster_df2)[1],.combine=rbind) %dopar% {
print(iter)
disease_name <- cluster_df2$Tumor_Names[iter]
cluster_label <- cluster_df2$Cluster_ID[iter]
cluster_member_names <- cluster_df2$Tumor_Names[which(cluster_df2$Cluster_ID==cluster_label)]
subset_dist_mat <- dist_mat %>% dplyr::filter(Tumor_Name %in% cluster_member_names) %>% dplyr::select(any_of(cluster_member_names))
if(dim(subset_dist_mat)[1] > 1){
ind_disease_name<- which(rownames(subset_dist_mat)==disease_name)
a= subset_dist_mat[ind_disease_name,]
delete_self_ind <- which(colnames(a)==disease_name)
a=a[c(-delete_self_ind)]
a=mean(as.matrix(a))
subset_other_clust <- cluster_df2 %>% dplyr::filter(Cluster_ID != cluster_label)
subset_other_clust<-subset_other_clust[order(subset_other_clust$Cluster_ID),]
other_clust_dist <- dist_mat %>% dplyr::filter(Tumor_Name %in% disease_name)
other_clust_dist<- other_clust_dist[,c(-dim(other_clust_dist)[2])]
other_clust_dist<-t(other_clust_dist)
colnames(other_clust_dist)<- "dx"
other_clust_dist<-as.data.frame(other_clust_dist)
other_clust_dist$dx<-as.double(other_clust_dist$dx)
other_clust_dist$Tumor_Names <- rownames(other_clust_dist)
subset_other_clust <- subset_other_clust %>% dplyr::left_join(other_clust_dist,by="Tumor_Names")
d_clust=aggregate( dx ~ Cluster_ID,subset_other_clust, mean )
b= min(d_clust$dx)
silo= (b-a)/max(a,b)
}else if(dim(subset_dist_mat)[1] == 1){
silo=0
}
cluster_df2$silhouette_score[iter] <- silo
}
View(nested_affinity_cluster_cosine)
nested_affinity_cluster_cosine3<-nested_affinity_cluster_cosine%>%dplyr::select(Tumor_Names,SubsetCluster_IDs)
colnames(nested_affinity_cluster_cosine3)[2]<-"Cluster_ID"
nested_affinity_cluster_cosine3<-compute_silhouette(cluster_df = nested_affinity_cluster_cosine3,dist_mat = dissimilarity_matrix_cosine)
View(nested_affinity_cluster_cosine2)
View(nested_affinity_cluster_cosine3)
nested_affinity_cluster_cosine3<-compute_silhouette(cluster_df = nested_affinity_cluster_cosine3,dist_mat = dissimilarity_matrix_cosine)
View(nested_affinity_cluster_cosine3)
nested_affinity_cluster_lv<-nested_affinity_cluster_lv2
nested_affinity_cluster_cosine<-nested_affinity_cluster_cosine2
nested_affinity_cluster_jw<-nested_affinity_cluster_jw2
nested_affinity_cluster_lv<-compute_silhouette(cluster_df = nested_affinity_cluster_lv,dist_mat = dissimilarity_matrix_lv)
nested_affinity_cluster_jw<-compute_silhouette(cluster_df = nested_affinity_cluster_jw,dist_mat = dissimilarity_matrix_jw)
nested_affinity_cluster_cosine<-compute_silhouette(cluster_df = nested_affinity_cluster_cosine,dist_mat = dissimilarity_matrix_cosine)
mean_freq_lv <- nested_affinity_cluster_lv %>% dplyr::select(Cluster_ID, silhouette_score) %>% dplyr::group_by(Cluster_ID) %>% dplyr::summarise(mean_silo_score=mean(silhouette_score),cluster_member_count =dplyr::n())
mean_freq_jw <- nested_affinity_cluster_jw %>% dplyr::select(Cluster_ID, silhouette_score) %>% dplyr::group_by(Cluster_ID) %>% dplyr::summarise(mean_silo_score=mean(silhouette_score),cluster_member_count =dplyr::n())
mean_freq_cosine <- nested_affinity_cluster_cosine %>% dplyr::select(Cluster_ID, silhouette_score) %>% dplyr::group_by(Cluster_ID) %>% dplyr::summarise(mean_silo_score=mean(silhouette_score),cluster_member_count =dplyr::n())
nested_affinity_cluster_lv<- nested_affinity_cluster_lv %>% dplyr::left_join(mean_freq_lv,by="Cluster_ID")
nested_affinity_cluster_jw<- nested_affinity_cluster_jw %>% dplyr::left_join(mean_freq_jw,by="Cluster_ID")
nested_affinity_cluster_cosine<- nested_affinity_cluster_cosine %>% dplyr::left_join(mean_freq_cosine,by="Cluster_ID")
benchmark_tumors <- c("b cell lymphoma", "neuroblastoma", "triple negative breast cancer",
"unresectable lung carcinoma", "liposarcoma","cancer of the liver",
"smoldering myeloma")
subcluster_lv <- nested_affinity_cluster_lv$SubsetCluster_IDs[nested_affinity_cluster_lv$Tumor_Names %in% benchmark_tumors]
subcluster_lv <- nested_affinity_cluster_lv$Cluster_ID[nested_affinity_cluster_lv$Tumor_Names %in% benchmark_tumors]
benchmark_aff_clust_lv <- nested_affinity_cluster_lv %>% dplyr::filter(Cluster_ID %in% subcluster_lv)
subcluster_jw <- nested_affinity_cluster_jw$Cluster_ID[nested_affinity_cluster_jw$Tumor_Names %in% benchmark_tumors]
benchmark_aff_clust_jw <- nested_affinity_cluster_jw %>% dplyr::filter(Cluster_ID %in% subcluster_jw)
subcluster_cosine <- nested_affinity_cluster_cosine$Cluster_ID[nested_affinity_cluster_cosine$Tumor_Names %in% benchmark_tumors]
benchmark_aff_clust_cosine <- nested_affinity_cluster_cosine %>% dplyr::filter(Cluster_ID %in% subcluster_cosine)
View(benchmark_aff_clust_cosine)
clust_plot_lv <- benchmark_aff_clust_lv %>% dplyr::select(Cluster_ID,mean_silo_score,cluster_member_count)
clust_plot_lv<-unique(clust_plot_lv)
p_lv <- ggplot(clust_plot_lv, aes(x=cluster_member_count, y=mean_silo_score)) +geom_point() +
geom_text(label=clust_plot_lv$Cluster_ID,check_overlap = TRUE,angle = 45,vjust = 0, nudge_y = 0.05) + labs(title = "Levenshtein distance clusters")
clust_plot_jw <- benchmark_aff_clust_jw %>% dplyr::select(Cluster_ID,mean_silo_score,cluster_member_count)
clust_plot_jw<-unique(clust_plot_jw)
p_jw <- ggplot(clust_plot_jw, aes(x=cluster_member_count, y=mean_silo_score)) +geom_point() +
geom_text(label=clust_plot_jw$Cluster_ID,check_overlap = TRUE,angle = 45,vjust = 0, nudge_y = 0.05) +labs(title = "Jarro Winkler distance clusters")
clust_plot_cosine <- benchmark_aff_clust_cosine %>% dplyr::select(Cluster_ID,mean_silo_score,cluster_member_count)
clust_plot_cosine<-unique(clust_plot_cosine)
p_cosine <- ggplot(clust_plot_cosine, aes(x=cluster_member_count, y=mean_silo_score)) +geom_point() +
geom_text(label=clust_plot_cosine$Cluster_ID,check_overlap = TRUE,angle = 45,vjust = 0, nudge_y = 0.05)+labs(title = "Cosine distance clusters")
p_cosine
global_clust_plot_lv <- nested_affinity_cluster_lv %>% dplyr::select(Cluster_ID,mean_silo_score,cluster_member_count) %>% dplyr::distinct()
global_clust_plot_jw <- nested_affinity_cluster_jw %>% dplyr::select(Cluster_ID,mean_silo_score,cluster_member_count) %>% dplyr::distinct()
global_clust_plot_cosine <- nested_affinity_cluster_cosine %>% dplyr::select(Cluster_ID,mean_silo_score,cluster_member_count) %>% dplyr::distinct()
plt_global_lv <- ggplot(global_clust_plot_lv, aes(x=cluster_member_count, y=mean_silo_score)) +geom_point() +
geom_text(label=global_clust_plot_lv$Cluster_ID,check_overlap = TRUE,angle = 45,vjust = 0, nudge_y = 0.05) + labs(title = "Levenshtein distance clusters")
plt_global_jw <- ggplot(global_clust_plot_jw, aes(x=cluster_member_count, y=mean_silo_score)) +geom_point() +
geom_text(label=global_clust_plot_jw$Cluster_ID,check_overlap = TRUE,angle = 45,vjust = 0, nudge_y = 0.05) + labs(title = "Jarro Winkler distance clusters")
plt_global_cosine <- ggplot(global_clust_plot_cosine, aes(x=cluster_member_count, y=mean_silo_score)) +geom_point() +
geom_text(label=global_clust_plot_cosine$Cluster_ID,check_overlap = TRUE,angle = 45,vjust = 0, nudge_y = 0.05) + labs(title = "Cosine distance clusters")
ggsave(plt_global_lv, filename = paste(plots_dir,"/plt_global_lv.pdf",sep=""), height = 30, width = 21, units = "cm")
ggsave(plt_global_jw, filename = paste(plots_dir,"/plt_global_jw.pdf",sep=""), height = 30, width = 21, units = "cm")
ggsave(plt_global_cosine, filename = paste(plots_dir,"/plt_global_cosine.pdf",sep=""), height = 30, width = 21, units = "cm")
benchmark_aff_clust_lv <- benchmark_aff_clust_lv[order(benchmark_aff_clust_lv$Cluster_ID,-benchmark_aff_clust_lv$silhouette_score),]
benchmark_aff_clust_jw <- benchmark_aff_clust_jw[order(benchmark_aff_clust_jw$Cluster_ID,-benchmark_aff_clust_jw$silhouette_score),]
benchmark_aff_clust_cosine <- benchmark_aff_clust_cosine[order(benchmark_aff_clust_cosine$Cluster_ID,-benchmark_aff_clust_cosine$silhouette_score),]
color_density_df <- as.data.frame(cbind(unique(benchmark_aff_clust_lv$Cluster_ID),c(1,10,30,50,70,90,120)))
colnames(color_density_df)<- c("Cluster_ID","color_density")
benchmark_aff_clust_lv<- benchmark_aff_clust_lv %>% dplyr::left_join(color_density_df,by="Cluster_ID")
benchmark_aff_clust_lv$color_density<- as.double(benchmark_aff_clust_lv$color_density)
color_density_df <- as.data.frame(cbind(unique(benchmark_aff_clust_jw$Cluster_ID),c(1,10,30,50,70,90,120)))
colnames(color_density_df)<- c("Cluster_ID","color_density")
benchmark_aff_clust_jw<- benchmark_aff_clust_jw %>% dplyr::left_join(color_density_df,by="Cluster_ID")
benchmark_aff_clust_jw$color_density<- as.double(benchmark_aff_clust_jw$color_density)
color_density_df <- as.data.frame(cbind(unique(benchmark_aff_clust_cosine$Cluster_ID),c(1,10,30,50,70,90,120)))
colnames(color_density_df)<- c("Cluster_ID","color_density")
benchmark_aff_clust_cosine<- benchmark_aff_clust_cosine %>% dplyr::left_join(color_density_df,by="Cluster_ID")
benchmark_aff_clust_cosine$color_density<- as.double(benchmark_aff_clust_cosine$color_density)
barplot(height=benchmark_aff_clust_lv$silhouette_score,names=benchmark_aff_clust_lv$Cluster_ID,ylim =c(-1,1),density=benchmark_aff_clust_lv$color_density,main="Levenshtein")
barplot(height=benchmark_aff_clust_jw$silhouette_score,names=benchmark_aff_clust_jw$Cluster_ID,ylim =c(-1,1),density=benchmark_aff_clust_jw$color_density, main="Jarro Winkler")
barplot(height=benchmark_aff_clust_cosine$silhouette_score,names=benchmark_aff_clust_cosine$Cluster_ID,ylim =c(-1,1),density=benchmark_aff_clust_cosine$color_density,main="Cosine")
write.csv(benchmark_aff_clust_lv,paste(results_dir,"/benchmark_aff_clust_lv.csv",sep=""))
write.csv(benchmark_aff_clust_jw,paste(results_dir,"/benchmark_aff_clust_jw.csv",sep=""))
write.csv(benchmark_aff_clust_cosine,paste(results_dir,"/benchmark_aff_clust_cosine.csv",sep=""))
write.csv(nested_affinity_cluster_lv,paste(results_dir,"/nested_affinity_cluster_lv.csv",sep=""))
write.csv(nested_affinity_cluster_jw,paste(results_dir,"/nested_affinity_cluster_jw.csv",sep=""))
write.csv(nested_affinity_cluster_cosine,paste(results_dir,"/nested_affinity_cluster_cosine.csv",sep=""))
write.csv(dissimilarity_matrix_cosine,paste(intermediate_dir,"/dissimilarity_matrix_cosine.csv",sep=""))
save.image(file = "script3.RData")
# Loads embeddings V3 and ADA2 for CT, WHO, NCIT  Tumors and then performs PCA.
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
})
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
library(readr)
WHO_3rd_4th_5th_text_embedding_3_large_embeddings <- read_csv("WHO_3rd_4th_5th_text-embedding-3-large_embeddings.csv")
View(WHO_3rd_4th_5th_text_embedding_3_large_embeddings)
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
# Read CT embedding file
embedding_df <- read.csv(paste(data_dir,"/disease_embeddings.csv",sep=""))
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
# Read CT embedding file
embedding_df <- read.csv(paste(data_dir,"/disease_embeddings.csv",sep=""))
embedding_df<-embedding_df[order(embedding_df$Disease),]
embedding_v3_large <- read.csv(paste(data_dir,"/embedding_tumor_names_text-embedding-3-large_embeddings.csv",sep=""))
embedding_v3_large <- read.csv(paste(data_dir,"/embedding_tumor_names_text-embedding-3-large_embeddings.csv",sep=""))
colnames(embedding_v3_large)[1]<-"Tumor_Names"
missing_v3_tumors <- read.csv(paste(data_dir,"/missing_V3_tumors.csv",sep=""))
colnames(missing_v3_tumors)[1]<-"Tumor_Names"
embedding_v3_large<-rbind(embedding_v3_large,missing_v3_tumors)
View(WHO_3rd_4th_5th_text_embedding_3_large_embeddings)
which(WHO_3rd_4th_5th_text_embedding_3_large_embeddings$Disease %in% embedding_df$Disease)
ct_disease_df <- read.csv(paste(input_dir,"/CT-Aug22-2023-Disease-File - clinical_trial_disease_aug_22_2023.csv",sep=""))
ct_tumor_df<- ct_disease_df %>% filter(validated_cancer_tumor=="Yes") %>%dplyr::select(diseases)
CT_missing_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/missed_CT_result_embeddings.csv",sep=""))
CT_embedding_df <- rbind(embedding_df,CT_missing_embedding_df)
CT_embedding_df <- unique(CT_embedding_df) # STILL CONTAINS DISEASES WITH EXACT STRING NAME BUT SLIGHTLY VARYING EMBEDDINGS
CT_embedding_df <- CT_embedding_df %>% group_by(Disease) %>% summarise(across(everything(), list(mean)))
library(readxl)
WHO_Tumor_all_edition <- read_excel("data/WHO_Tumors/result/WHO_Tumor_all_edition.xlsx")
View(WHO_Tumor_all_edition)
library(readr)
WHO_3rd_4th_5th <- read_csv("data/WHO_Tumors/result/WHO_3rd_4th_5th.csv")
View(WHO_3rd_4th_5th)
View(WHO_3rd_4th_5th_text_embedding_3_large_embeddings)
which(!WHO_3rd_4th_5th_text_embedding_3_large_embeddings$Disease %in% WHO_3rd_4th_5th)
which(WHO_3rd_4th_5th_text_embedding_3_large_embeddings$Disease %in% WHO_3rd_4th_5th)
View(WHO_3rd_4th_5th)
# Loads embeddings V3 and ADA2 for CT, WHO, NCIT  Tumors and then performs PCA.
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
# Read CT embedding file
embedding_df <- read.csv(paste(data_dir,"/disease_embeddings.csv",sep=""))
embedding_df<-embedding_df[order(embedding_df$Disease),]
embedding_v3_large <- read.csv(paste(data_dir,"/embedding_tumor_names_text-embedding-3-large_embeddings.csv",sep=""))
colnames(embedding_v3_large)[1]<-"Tumor_Names"
missing_v3_tumors <- read.csv(paste(data_dir,"/missing_V3_tumors.csv",sep=""))
colnames(missing_v3_tumors)[1]<-"Tumor_Names"
embedding_v3_large<-rbind(embedding_v3_large,missing_v3_tumors)
WHO_3rd_4th_5th_text_embedding_3_large_embeddings <- read_csv(paste(data_dir,"/WHO_3rd_4th_5th_text-embedding-3-large_embeddings.csv",sep=""))
View(embedding_df)
View(WHO_3rd_4th_5th_text_embedding_3_large_embeddings)
embedding_v3_large<-rbind(embedding_v3_large,WHO_3rd_4th_5th_text_embedding_3_large_embeddings)
View(embedding_v3_large)
colnames(WHO_3rd_4th_5th_text_embedding_3_large_embeddings)<- colnames(embedding_v3_large)
embedding_v3_large<-rbind(embedding_v3_large,WHO_3rd_4th_5th_text_embedding_3_large_embeddings)
df<-as.data.frame(table(embedding_v3_large$Tumor_Names))
View(df)
ct_disease_df <- read.csv(paste(input_dir,"/CT-Aug22-2023-Disease-File - clinical_trial_disease_aug_22_2023.csv",sep=""))
ct_tumor_df<- ct_disease_df %>% filter(validated_cancer_tumor=="Yes") %>%dplyr::select(diseases)
CT_missing_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/missed_CT_result_embeddings.csv",sep=""))
CT_embedding_df <- rbind(embedding_df,CT_missing_embedding_df)
CT_embedding_df <- unique(CT_embedding_df) # STILL CONTAINS DISEASES WITH EXACT STRING NAME BUT SLIGHTLY VARYING EMBEDDINGS
CT_embedding_df <- CT_embedding_df %>% group_by(Disease) %>% summarise(across(everything(), list(mean)))
CT_embedding_agg_df <- ct_tumor_df %>% left_join(CT_embedding_df, by=c("diseases"="Disease"))
CT_embedding_agg_df<-CT_embedding_agg_df[order(CT_embedding_agg_df$diseases),] # Order by names so the rows with missing values are next to their matched rows
ind_missing_commas <- which(is.na(CT_embedding_agg_df[,2:1537]), arr.ind=TRUE)
ind_missing_commas <- unique(ind_missing_commas[,c(-2)])
ind_missing_commas_iteration_2 <-list()
for (iter in ind_missing_commas){
print(iter)
disease_name <- CT_embedding_agg_df$diseases[iter]
disease_name_comma_removed <- gsub(",","",disease_name)
ind_replacement <- which(CT_missing_embedding_df$Disease==disease_name_comma_removed)
if(length(ind_replacement)>0){
CT_embedding_agg_df[iter,2:1537] <- CT_missing_embedding_df[ind_replacement,2:1537]
}
else{
disease_name_comma_removed <- gsub(","," ",disease_name)
ind_replacement <- which(CT_missing_embedding_df$Disease==disease_name_comma_removed)
if(length(ind_replacement)>0){
CT_embedding_agg_df[iter,2:1537] <- CT_missing_embedding_df[ind_replacement,2:1537]
}else{
ind_missing_commas_iteration_2 <- c(ind_missing_commas_iteration_2,iter)
}
}
}
# Disease names with multiple commas need to be given embeddings
ind_missing_commas_iteration_2 <- unlist(ind_missing_commas_iteration_2)
tumor_list <- CT_missing_embedding_df$Disease
tumor_list <- gsub(",","",tumor_list)
tumor_list <- gsub(" ","",tumor_list)
for(iter in ind_missing_commas_iteration_2){
disease_name <- CT_embedding_agg_df$diseases[iter]
disease_name_comma_removed <- gsub(",","",disease_name)
disease_name_comma_removed<- gsub(" ","",disease_name_comma_removed)
ind_replacement <- which(tumor_list==disease_name_comma_removed)
if(length(ind_replacement)>0){
CT_embedding_agg_df[iter,2:1537]  <-CT_missing_embedding_df[ind_replacement,2:1537]
}
}
# add embedding for 2 tumors with special characters in their names
ind_missing_commas_iteration_3 <-  which(is.na(CT_embedding_agg_df[,2:1537]), arr.ind=TRUE)
#ind_missing_commas_iteration_3 <- unique(ind_missing_commas_iteration_3[,1])
#CT_embedding_agg_df[ind_missing_commas_iteration_3[1],2:1537]<-CT_missing_embedding_df[1085,2:1537]
#CT_embedding_agg_df[ind_missing_commas_iteration_3[2],2:1537]<-CT_missing_embedding_df[1228,2:1537]
print(length(which(is.na(CT_embedding_agg_df[,2:1537]), arr.ind=TRUE)))
CT_embedding_agg_df<-unique(CT_embedding_agg_df)
# Read NCIT Terms and WHO Terms with embedding and join them to the rest of the embedding list
NCIT_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/NCIT_Neoplasm_Core_terms_text-embedding-ada-002_embeddings.csv",sep=""))
WHO_embedding_df <-read.csv(paste(data_dir,"/dt_input_file_6_dec/WHO_Only_terms_text-embedding-ada-002_embeddings.csv",sep=""))
NCIT_embedding_df<-NCIT_embedding_df[c(-1),] # Remove the header (column name) embedding
WHO_embedding_df<-WHO_embedding_df[c(-1),] # Remove the header (column name) embedding
rownames(NCIT_embedding_df)<-NULL
rownames(WHO_embedding_df)<-NULL
colnames(CT_embedding_agg_df)<-colnames(NCIT_embedding_df) # CT embedding columns need to be fixed
combined_embedding_df <- rbind(CT_embedding_agg_df,NCIT_embedding_df,WHO_embedding_df)
combined_embedding_df$Disease<- tolower(combined_embedding_df$Disease)
combined_embedding_df <- as.data.frame(combined_embedding_df %>% group_by(Disease) %>% summarise(across(everything(), list(mean))))
colnames(combined_embedding_df)<-colnames(NCIT_embedding_df)
rownames(combined_embedding_df)<-combined_embedding_df$Disease
combined_embedding_df<-combined_embedding_df[,c(-1)]
View(CT_embedding_df)
embedding_v3_large <- embedding_v3_large%>% group_by(Tumor_Names) %>% summarise(across(everything(), list(mean))))
embedding_v3_large <- embedding_v3_large%>%group_by(Tumor_Names) %>% summarise(across(everything(), list(mean)))
library(readxl)
WHO_Tumor_all_edition <- read_excel("data/WHO_Tumors/result/WHO_Tumor_all_edition.xlsx")
View(WHO_Tumor_all_edition)
length(which(WHO_Tumor_all_edition$Tumor_Names %in% embedding_v3_large$Tumor_Names))
length(which(WHO_Tumor_all_edition$Tumor_Names %in% rownames(combined_embedding_df)))
View(combined_embedding_df)
(which(WHO_Tumor_all_edition$Tumor_Names %in% rownames(combined_embedding_df)))
(which(!WHO_Tumor_all_edition$Tumor_Names %in% rownames(combined_embedding_df)))
rownames(embedding_v3_large)<-embedding_v3_large$Tumor_Names
embedding_v3_large<-embedding_v3_large[,c(-1)]
results_v3 <- prcomp(embedding_v3_large, scale = TRUE)
eigs_v3 <- results_v3$sdev^2
ff_v3<-rbind(SD = sqrt(eigs_v3),Proportion = eigs_v3/sum(eigs_v3), Cumulative = cumsum(eigs_v3)/sum(eigs_v3))
print(sum(ff_v3[2,1:177]))
print(sum(ff_v3[2,1:178]))
print(sum(ff_v3[2,1:179]))
print(sum(ff_v3[2,1:180]))
print(sum(ff_v3[2,1:181]))
print(sum(ff_v3[2,1:185]))
print(sum(ff_v3[2,1:189]))
print(sum(ff_v3[2,1:188]))
print(sum(ff_v3[2,1:187]))
print(sum(ff_v3[2,1:186]))
print(sum(ff_v3[2,1:187]))
write.csv(disease_transform_v3,file =paste(intermediate_dir,"/disease_transform_pca_v3.csv",sep="") )
print(sum(ff_v3[2,1:187]))
print(sum(ff_v3[2,1:187]))
disease_transform_v3<-as.data.frame(-results_v3$x[,1:187])
write.csv(disease_transform_v3,file =paste(intermediate_dir,"/disease_transform_pca_v3.csv",sep="") )
source(paste(util_dir,"/is_cancer_who.R",sep = ""))
source(paste(util_dir,"/create_disease_who_map.R",sep = ""))
source(paste(util_dir,"/cancer_fuzzy_match.R",sep = ""))
View(is_cancer_who)
# Load data from clinical trials and select only the diseases with NCT ID , and associated with
# Intervention types of Drug, Biological,Combination Product,Genetic. Totally 50410 diseases are extracted.
# Load libraries
suppressPackageStartupMessages({
library(dplyr)
library(tidyverse)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
source(paste(util_dir,"/split_drugs.R",sep = ""))
# Load CT data
load(paste(input_dir,"/clinical_data.RData",sep=""))
load(paste(input_dir,"/eligibility_data.RData",sep=""))
load(paste(input_dir,"/conditions_data.RData",sep=""))
load(paste(input_dir,"/browse_conditions_data.RData",sep=""))
# Relationship between Drug and Disease in CT and NCT IDS
clinical_data <- clinical_data %>% dplyr::left_join(eligibility_data,by="nct_id")
clinical_data<-clinical_data %>% dplyr::select(nct_id,intervention_type,name)
clinical_data<-clinical_data %>% dplyr::filter(intervention_type %in% c("Drug","Biological","Combination Product","Genetic" ))
colnames(clinical_data)[3]<-"Intervention_CT"
clinical_data<-split_drugs(clinical_data)
clinical_data<-distinct(clinical_data)
clinical_data <- clinical_data %>% dplyr::select(nct_id,Intervention_CT)
conditions_data <- conditions_data %>% dplyr::select(nct_id,downcase_name)
browse_conditions_data<-browse_conditions_data %>% dplyr::select(nct_id,downcase_mesh_term)
clinical_data <- clinical_data %>% dplyr::left_join(conditions_data,by="nct_id") # contains CT drugs and disease info with NCT_IDs
colnames(clinical_data)[3]<-"diseases"
# CT-Disease-File
ct_disease_df <- as.data.frame(clinical_data$diseases)
colnames(ct_disease_df)<- "diseases"
ct_disease_df<-distinct(ct_disease_df)
View(ct_disease_df)
View(clinical_data)
which("," %in% clinical_data$diseases)
library(readxl)
WHO_Tumor_all_edition <- read_excel("data/WHO_Tumors/result/WHO_Tumor_all_edition.xlsx")
View(WHO_Tumor_all_edition)
