View(affinity_cluster_df)
d.apclus2@idx
d.apclus2@idx[1]
d.apclus2@idx[2]
rownames(d.apclus2@idx[2])
colnames(d.apclus2@idx[2])
type(d.apclus2@idx[2])
typeof(d.apclus2@idx[2])
names(d.apclus2@idx[2])
names(d.apclus2@idx)
affinity_cluster_df$tumor_names<-NA
affinity_cluster_df$tumor_names<-names(d.apclus2@idx)
set.seed(13)
d.apclus2_again <- apcluster(negDistMat(r=2), disease_transform)
cat("affinity propogation optimal number of clusters:", length(apclus2_again@clusters), "\n")
cat("affinity propogation optimal number of clusters:", length(d.apclus2_again@clusters), "\n")
affinity_cluster_df_2<-as.data.frame(d.apclus2_again2@idx)
affinity_cluster_df_2<-as.data.frame(d.apclus2_again@idx)
affinity_cluster_df_2$tumor_names<-NA
affinity_cluster_df_2$tumor_names<-names(d.apclus2_again@idx)
View(affinity_cluster_df_2)
View(affinity_cluster_df)
d.apclus2_negDist <- apcluster(negDistMat(r=3), disease_transform)
cat("affinity propogation optimal number of clusters:", length(d.apclus2_negDist 2@clusters), "\n")
cat("affinity propogation optimal number of clusters:", length(d.apclus2_negDist@clusters), "\n")
d.apclus2_negDist_1 <- apcluster(negDistMat(r=1), disease_transform)
cat("affinity propogation optimal number of clusters:", length(d.apclus2_negDist_1clusters), "\n")
cat("affinity propogation optimal number of clusters:", length(d.apclus2_negDist_1@clusters), "\n")
affinity_cluster_df_1<-as.data.frame(d.apclus2_negDist_1@idx)
affinity_cluster_df_1$tumor_names<-NA
affinity_cluster_df_1$tumor_names<-names(d.apclus2_negDist_1@idx)
View(affinity_cluster_df_1)
d.apclus2_negDist_1@clusters
d.apclus2_negDist_1@clusters[1]
unlist(d.apclus2_negDist_1@clusters[1])
names(unlist(d.apclus2_negDist_1@clusters[1]))
affinity_cluster_df_1<-data.frame()
affinity_cluster_df_1$Tumor_Names <- NA
affinity_cluster_df_1<-as.data.frame(matrix(nrow=13434,ncol=2))
colnames(affinity_cluster_df_1)<-c("Tumor_Names","Cluster_ID")
names(unlist(d.apclus2_negDist_1@clusters[1]))[1]
names(unlist(d.apclus2_negDist_1@clusters[1]))[2]
affinity_cluster_df_1<-as.data.frame(matrix(nrow=1,ncol=2))
colnames(affinity_cluster_df_1)<-c("Tumor_Names","Cluster_ID")
length(d.apclus2_negDist_1@clusters)
for (iter in 1: length(d.apclus2_negDist_1@clusters)){
affinity_cluster_df_1$Tumor_Names <- paste(names(unlist(d.apclus2_negDist_1@clusters[iter])),sep = ";")
affinity_cluster_df_1$Cluster_ID <- iter
}
iter=1
paste(names(unlist(d.apclus2_negDist_1@clusters[iter])),sep = ";")
names(unlist(d.apclus2_negDist_1@clusters[iter]))
names(unlist(d.apclus2_negDist_1@clusters[iter]))[1]
names(unlist(d.apclus2_negDist_1@clusters[iter]))[2]
paste(names(unlist(d.apclus2_negDist_1@clusters[iter])),collapse = ";")
affinity_cluster_df_1<-as.data.frame(matrix(nrow=1,ncol=2))
colnames(affinity_cluster_df_1)<-c("Tumor_Names","Cluster_ID")
for (iter in 1: length(d.apclus2_negDist_1@clusters)){
affinity_cluster_df_1$Tumor_Names <- paste(names(unlist(d.apclus2_negDist_1@clusters[iter])),collapse = ";")
affinity_cluster_df_1$Cluster_ID <- iter
}
affinity_cluster_df_1<-as.data.frame(matrix(nrow=1,ncol=2))
colnames(affinity_cluster_df_1)<-c("Tumor_Names","Cluster_ID")
for (iter in 1: length(d.apclus2_negDist_1@clusters)){
affinity_cluster_df_1[iter,1] <- paste(names(unlist(d.apclus2_negDist_1@clusters[iter])),collapse = ";")
affinity_cluster_df_1[iter,2] <- iter
}
affinity_cluster_df_1<- affinity_cluster_df_1 %>% separate_rows(Tumor_Names, sep = ';')
affinity_cluster_df<-as.data.frame(matrix(nrow=1,ncol=2))
colnames(affinity_cluster_df)<-c("Tumor_Names","Cluster_ID")
for (iter in 1: length(d.apclus2@clusters)){
affinity_cluster_df[iter,1] <- paste(names(unlist(d.apclus2@clusters[iter])),collapse = ";")
affinity_cluster_df[iter,2] <- iter
}
affinity_cluster_df<- affinity_cluster_df %>% separate_rows(Tumor_Names, sep = ';')
cat("affinity propogation optimal number of clusters:", length(d.apclus2_again@clusters), "\n")
cat("affinity propogation optimal number of clusters:", length(d.apclus2@clusters), "\n")
cat("affinity propogation optimal number of clusters:", length(d.apclus2_again@clusters), "\n")
cat("affinity propogation optimal number of clusters:", length(d.apclus2_negDist@clusters), "\n")
rm(d.apclus2_again)
affinity_cluster_df_2<-as.data.frame(d.apclus2_negDist@idx)
affinity_cluster_df_2<-as.data.frame(matrix(nrow=1,ncol=2))
colnames(affinity_cluster_df_2)<-c("Tumor_Names","Cluster_ID")
for (iter in 1: length(d.apclus2_againclusters)){
affinity_cluster_df_2[iter,1] <- paste(names(unlist(d.apclus2_negDist@clusters[iter])),collapse = ";")
affinity_cluster_df_2[iter,2] <- iter
}
affinity_cluster_df_2<-as.data.frame(d.apclus2_negDist@idx)
affinity_cluster_df_2<-as.data.frame(matrix(nrow=1,ncol=2))
affinity_cluster_df_2<-as.data.frame(d.apclus2_negDist@idx)
affinity_cluster_df_2<-as.data.frame(matrix(nrow=1,ncol=2))
colnames(affinity_cluster_df_2)<-c("Tumor_Names","Cluster_ID")
for (iter in 1: length(d.apclus2_negDist@clusters)){
affinity_cluster_df_2[iter,1] <- paste(names(unlist(d.apclus2_negDist@clusters[iter])),collapse = ";")
affinity_cluster_df_2[iter,2] <- iter
}
affinity_cluster_df_2<- affinity_cluster_df_2 %>% separate_rows(Tumor_Names, sep = ';')
View(affinity_cluster_df_1)
propagation <- apcluster(negDistMat(r=2.5), disease_transform)
save.image(file='/Users/lahiria/Desktop/MTP_Paper/PMTL_paper/analyses/embedding-analysis-dt/workspace.RData')
mclust_result <- Mclust(disease_transform[1:100,], G=1:100)
library(mclust)
mclust_result <- Mclust(disease_transform[1:100,], G=1:100)
mclust_best <- dim(mclust_result$z)[2]
mclust_best
mclust_result <- Mclust(disease_transform, G=1:100)
mclust_result <- Mclust(disease_transform, G=1:13433)
mclust_result <- Mclust(disease_transform, G=1:13400)
library(fpc)
install.packages("fpc")
library(fpc)
library(cluster)
pam<-fviz_nbclust(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
which(pam$data$y==max(pam$data$y))
as.integer(pam$data$clusters[4])
pam
pam<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 13433,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 13433,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 100,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
source("~/Desktop/MTP_Paper/PMTL_paper/util/fviz_nbclust_verbose.R")
pam<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam(),
method = c("silhouette"),
diss = NULL,
k.max = 10,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
library("cluster")
library("factoextra"
)
pam<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
rm(pam)
pam_results<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam_results
source("~/Desktop/MTP_Paper/PMTL_paper/util/fviz_nbclust_verbose.R")
pam_results
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(10,5,2,4)
nboot = 100,
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(10,5,2,4),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
source("~/Desktop/MTP_Paper/PMTL_paper/util/fviz_nbclust_verbose.R")
source("~/Desktop/MTP_Paper/PMTL_paper/util/fviz_nbclust_verbose.R")
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(10,5,2,4)
nboot = 100,
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(10,5,2,4),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam_results_cluster_vec
cluster_vec=c(10,5,2,4)
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(10,5,2,4),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam_results_cluster_vec
source("~/Desktop/MTP_Paper/PMTL_paper/util/fviz_nbclust_verbose.R")
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(10,5,2,4),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam_results_cluster_vec
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(10,100,1),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(10,20,1),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(5,2,3),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam_results_cluster_vec
source("~/Desktop/MTP_Paper/PMTL_paper/util/fviz_nbclust_verbose.R")
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(5,2,3),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam_results_cluster_vec
source("~/Desktop/MTP_Paper/PMTL_paper/util/fviz_nbclust_verbose.R")
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
pam_results_cluster_vec<-fviz_nbclust_verbose(
disease_transform,
FUNcluster = pam,
method = c("silhouette"),
diss = NULL,
k.max = 10,
cluster_vec = c(1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000),
nboot = 100,
verbose = interactive(),
barfill = "steelblue",
barcolor = "steelblue",
linecolor = "steelblue",
print.summary = TRUE,
)
dunn_result
kmeans_disease_dunn = kmeans(disease_transform, centers = 7000, nstart = 100)
diseases_cluster_dunn <- as.data.frame(kmeans_disease_dunn$cluster)
View(diseases_cluster_dunn)
diseases_cluster_dunn$Tumor_Names <- rownames(diseases_cluster_dunn)
View(affinity_cluster_df_1)
View(affinity_cluster_df_2)
fviz_dunn <- function(data) {
cluster_vec <- c(10,100,1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000)
dunnin <- c()
for (i in 1:length(cluster_vec)) {
print(cluster_vec[i])
dunnin[i] <- dunn(distance = dist(data), clusters = kmeans(data, cluster_vec[i])$cluster)
}
plot(cluster_vec, dunnin, xlab =  "Cluster number k",
ylab = "Dunn Index",
main = "Dunn Plot", cex.main=1,
col = "dodgerblue1", cex = 0.9 ,
lty=1 , type="o" , lwd=1, pch=4,
bty = "l",
las = 1, cex.axis = 0.8, tcl  = -0.2)
abline(v=which(dunnin==max(dunnin)) + 1, lwd=1, col="red", lty="dashed")
}
dunn_result <- fviz_dunn(disease_transform)
save(diseases_cluster,file=paste(analyses_dir,"/embedding-analysis-dt/diseases_cluster.Rdata",sep=""))
save(embedding_df_agg,file=paste(analyses_dir,"/embedding-analysis-dt/embedding_df_agg.Rdata",sep=""))
save.image(file='/Users/lahiria/Desktop/MTP_Paper/PMTL_paper/analyses/embedding-analysis-dt/workspace.RData')
dunn_result
dunn_result
dunnkmeans_disease_dunn = kmeans(disease_transform, centers = 1000, nstart = 100)
kmeans_disease_dunn = kmeans(disease_transform, centers = 1000, nstart = 100)
diseases_cluster_dunn <- as.data.frame(kmeans_disease_dunn$cluster)
save(diseases_cluster,file=paste(analyses_dir,"/embedding-analysis-dt/diseases_cluster.Rdata",sep=""))
save(embedding_df_agg,file=paste(analyses_dir,"/embedding-analysis-dt/embedding_df_agg.Rdata",sep=""))
rbeta(10,0.5,0.4)
rbeta(10,0.5,0.5)
rbeta(10,1,1)
detectCores()
library(parallel)
detectCores
detectCores()
# Annotate the 50K diseases automatically as cancer or not.
# Load libraries
suppressPackageStartupMessages({
library(dplyr)
library(readxl)
library(tidyverse)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
setwd("~/Desktop/MTP_Paper/CT-Embedding-Paper")
# Annotate the 50K diseases automatically as cancer or not.
# Load libraries
suppressPackageStartupMessages({
library(dplyr)
library(readxl)
library(tidyverse)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
source(paste(util_dir,"/is_cancer_who.R",sep = ""))
source(paste(util_dir,"/create_disease_who_map.R",sep = ""))
source(paste(util_dir,"/cancer_fuzzy_match.R",sep = ""))
source(paste(util_dir,"/is_pedcan_who.R",sep = ""))
source(paste(util_dir,"/create_cancer_who_map.R",sep = ""))
source(paste(util_dir,"/pedcan_fuzzy_match.R",sep = ""))
ct_disease_df <- read.csv(paste(intermediate_dir,"/ct_disease_df.csv",sep=""))
ct_disease_df<-ct_disease_df %>% dplyr::select(nct_id,diseases)
who_general_words <- read_excel(paste(data_dir,"/who_cancer_key_words_general_5th_edition.xlsx",sep="")) # WHO Tumour List general (ADULT + PED)
who_ped_words<-  read_excel(paste(data_dir,"/who_cancer_key_words_paediatric_5th_edition.xlsx",sep="")) # WHO Tumour List PED
who_general_words$who_cancers<-tolower(who_general_words$who_cancers)
who_ped_words$who_paediatric_cancers<-tolower(who_ped_words$who_paediatric_cancers)
