Kmeans_silhouette_5th_edition_ada2$k<-as.character(Kmeans_silhouette_5th_edition_ada2$k)
rm(list=setdiff(ls(), c("Kmeans_silhouette_all_edition_ada2","a1","Kmeans_silhouette_5th_edition_ada2","title_size","axis_size","red_dot_size","data_dir")))
a2<-ggplot(Kmeans_silhouette_5th_edition_ada2, aes(x=k, y=mean_silhouette_score)) +
geom_segment( aes(x=fct_inorder(k), xend=k, y=0, yend=mean_silhouette_score)) +geom_point()  +
geom_point(data = Kmeans_silhouette_5th_edition_ada2[which.max(Kmeans_silhouette_5th_edition_ada2$mean_silhouette_score), ], color="red",size=red_dot_size)+
ylab("Mean Silhouette Score")+ggtitle("b")+theme(plot.title = element_text(size = title_size, face = "bold"),axis.text=element_text(size=axis_size),
axis.title=element_text(size=axis_size,face="bold"))
#load("/Users/lahiria/Desktop/MTP_Paper/temp/CT-Large-File-June21/script-5B.RData")
load(paste(data_dir,"/script-5B.RData",sep = ""))
Kmeans_silhouette_all_edition_v3<- Kmeans_silhouette
Kmeans_silhouette_all_edition_v3$k<-as.character(Kmeans_silhouette_all_edition_v3$k)
rm(list=setdiff(ls(), c("Kmeans_silhouette_all_edition_ada2","a1","Kmeans_silhouette_5th_edition_ada2","a2",
"Kmeans_silhouette_all_edition_v3","title_size","axis_size","red_dot_size","data_dir")))
a3<-ggplot(Kmeans_silhouette_all_edition_v3, aes(x=k, y=mean_silhouette_score)) +
geom_segment( aes(x=fct_inorder(k), xend=k, y=0, yend=mean_silhouette_score)) +geom_point()  +
geom_point(data = Kmeans_silhouette_all_edition_v3[which.max(Kmeans_silhouette_all_edition_v3$mean_silhouette_score), ], color="red",size=red_dot_size)+
ylab("Mean Silhouette Score")+ggtitle("c")+theme(plot.title = element_text(size = title_size, face = "bold"),axis.text=element_text(size=axis_size),
axis.title=element_text(size=axis_size,face="bold"))
#load("/Users/lahiria/Desktop/MTP_Paper/temp/CT-Large-File-June21/script-5b5thed-aug21.RData")
load(paste(data_dir,"/script-5b_5thed.RData",sep = ""))
Kmeans_silhouette_5th_edition_v3<- Kmeans_silhouette
Kmeans_silhouette_5th_edition_v3$k<-as.character(Kmeans_silhouette_5th_edition_v3$k)
rm(list=setdiff(ls(), c("Kmeans_silhouette_all_edition_ada2","a1","Kmeans_silhouette_5th_edition_ada2","a2","a3","Kmeans_silhouette_5th_edition_v3",
"Kmeans_silhouette_all_edition_v3","title_size","axis_size","red_dot_size","data_dir")))
a4<-ggplot(Kmeans_silhouette_5th_edition_v3, aes(x=k, y=mean_silhouette_score)) +
geom_segment( aes(x=fct_inorder(k), xend=k, y=0, yend=mean_silhouette_score)) +geom_point()  +
geom_point(data = Kmeans_silhouette_5th_edition_v3[which.max(Kmeans_silhouette_5th_edition_v3$mean_silhouette_score), ], color="red",size=red_dot_size)+
ylab("Mean Silhouette Score")+ggtitle("d")+theme(plot.title = element_text(size = title_size, face = "bold"),axis.text=element_text(size=axis_size),
axis.title=element_text(size=axis_size,face="bold"))
p5<-ggarrange(a1, a2,a3,a4,nrow = 4,ncol = 1)
p5
ggsave(p5, filename ="Paper/plots/p5",, height = 50, width = 120, units = "cm",  dpi = 300,
)
ggsave(p5, filename ="Paper/plots/p5.png",, height = 50, width = 120, units = "cm",  dpi = 300,
)
setwd("~/Desktop/MTP_Paper/CT-Embedding-Paper")
setwd("~/Desktop/MTP_Paper/CT-Embedding-Paper")
suppressPackageStartupMessages({
library(dplyr)
library(doParallel)
library(foreach)
library(stringdist)
library(stringr)
library(readxl)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
results_dir <- file.path(analysis_dir,"results_5th")
intermediate_dir <- file.path(analysis_dir,"intermediate")
data_dir''
data_dir
suppressPackageStartupMessages({
library(dplyr)
library(doParallel)
library(foreach)
library(stringdist)
library(stringr)
library(readxl)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
results_dir <- file.path(analysis_dir,"results_5th")
intermediate_dir <- file.path(analysis_dir,"intermediate")
data_dir
# Computes Kmeans cluster of ADA2 data and also computes silhouette index
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(factoextra)
library(cluster)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
result_dir <-file.path(analysis_dir,"results_5th")
plots_dir<-file.path(root_dir,"plots_5th")
intermediate_dir
# Computes Kmeans cluster of ADA2 data and also computes silhouette index
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(factoextra)
library(cluster)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
result_dir <-file.path(analysis_dir,"results_5th")
plots_dir<-file.path(root_dir,"plots_5th")
# Computes Kmeans cluster of ADA2 data and also computes silhouette index
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(factoextra)
library(cluster)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
result_dir <-file.path(analysis_dir,"results_5th")
plots_dir<-file.path(root_dir,"plots_5th")
disease_transform<- read.csv(paste(intermediate_dir,"/disease_transform_pca_ada2_5thed.csv",sep="") )
# Computes Kmeans cluster of ADA2 data and also computes silhouette index
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(factoextra)
library(cluster)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
result_dir <-file.path(analysis_dir,"results")
plots_dir<-file.path(root_dir,"plots")
disease_transform<- read.csv(paste(intermediate_dir,"/disease_transform_pca_ada2.csv",sep="") )
intermediate_dir
# Computes Kmeans cluster of ADA2 data and also computes silhouette index
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(factoextra)
library(cluster)
library(apcluster)
})
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
result_dir <-file.path(analysis_dir,"results_5th")
plots_dir<-file.path(root_dir,"plots_5th")
disease_transform_v3<- read.csv(paste(intermediate_dir,"/disease_transform_pca_v3_5thed.csv",sep="") )
# Computes Kmeans cluster of V3 data and also computes silhouette index
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(factoextra)
library(cluster)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
result_dir <-file.path(analysis_dir,"results")
plots_dir<-file.path(root_dir,"plots")
disease_transform_v3<- read.csv(paste(intermediate_dir,"/disease_transform_pca_v3.csv",sep="") )
intermediate_dir
# Computes affinity cluster of ADA2 data. Nested clustering is performed on large cluster. Cluster size is determined to be large using Z scores on cluster membership.
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
results_dir <- file.path(analysis_dir,"results_5th")
# Load affinity Cluster
source(paste(util_dir,"/run_affinity_clustering.R",sep=""))
disease_transform<- read.csv(paste(intermediate_dir,"/disease_transform_pca_ada2_5thed.csv",sep="") )
colnames(disease_transform)[1]<-"Tumor_Name"
rownames(disease_transform)<-disease_transform$Tumor_Name # Needed for AP Clust
# Computes affinity cluster of ADA2 data. Nested clustering is performed on large cluster. Cluster size is determined to be large using Z scores on cluster membership.
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
results_dir <- file.path(analysis_dir,"results_5th")
# Load affinity Cluster
source(paste(util_dir,"/run_affinity_clustering.R",sep=""))
########################################*************************************###########
# Load PCA Embeddings of CT , WHO, NCIT
disease_transform<- read.csv(paste(intermediate_dir,"/disease_transform_pca_ada2_5thed.csv",sep="") )
colnames(disease_transform)[1]<-"Tumor_Name"
rownames(disease_transform)<-disease_transform$Tumor_Name # Needed for AP Clust
# Computes affinity cluster of ADA2 data. Nested clustering is performed on large cluster. Cluster size is determined to be large using Z scores on cluster membership.
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
results_dir <- file.path(analysis_dir,"results")
source(paste(util_dir,"/run_affinity_clustering.R",sep=""))
########################################*************************************###########
# Load PCA Embeddings of CT , WHO, NCIT
disease_transform<- read.csv(paste(intermediate_dir,"/disease_transform_pca_ada2.csv",sep="") )
# Computes affinity cluster of V3 data. Nested clustering is performed on large cluster. Cluster size is determined to be large using Z scores on cluster membership.
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
results_dir <- file.path(analysis_dir,"results_5th")
source(paste(util_dir,"/run_affinity_clustering.R",sep=""))
disease_transform_v3<- read.csv(paste(intermediate_dir,"/disease_transform_pca_v3_5thed.csv",sep="") )
# Computes affinity cluster of V3 data. Nested clustering is performed on large cluster. Cluster size is determined to be large using Z scores on cluster membership.
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(apcluster)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
results_dir <- file.path(analysis_dir,"results")
source(paste(util_dir,"/run_affinity_clustering.R",sep=""))
disease_transform_v3<- read.csv(paste(intermediate_dir,"/disease_transform_pca_v3.csv",sep="") )
# Annotate Affinity cluster results of ADA2
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
intermediate_dir
# Annotate Affinity cluster results of ADA2
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
intermediate_dir
# Annotate Affinity cluster results of V3
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate_5th")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
intermediate_dir
# Annotate Affinity cluster results of V3
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
library(doParallel)
library(foreach)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
intermediate_dir
# Loads embeddings ADA2 for CT, WHO, NCIT  Tumors and then performs PCA.
suppressPackageStartupMessages({
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
library(stringi)
library(qdapRegex)
library(jsonlite)
library(httr)
library(biomaRt)
library(ghql)
library(readxl)
})
# Set the directories
setwd(getwd())
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
util_dir <- file.path(root_dir, "util")
data_dir <- file.path(root_dir,"data")
input_dir <- file.path(root_dir,"input")
analysis_dir <- file.path(root_dir,"analysis")
intermediate_dir <- file.path(analysis_dir,"intermediate")
source(paste(util_dir,"/cluster_label_assignment_refined.R",sep=""))
View(cluster_label_assignment_refined)
session()
version
